/*
 * Copyright 2013 SirsiDynix.  All rights reserved.
 */
exports.findAll = function(req, res) {
	mongo_connect(function(db) {
		db.collection('herolist', function(err, collection) {
			collection.find().toArray(function(err, items) {
				res.send(items);
			});
		});
	});
};

exports.findById = function(req, res) {
	mongo_connect(function(db) {
		var id = req.params.id;
		db.collection('herolist', function(err, collection) {
			collection.findOne({'_id':new BSON.ObjectID(id)}, function(err, item) {

				db.collection('hero', function(err, collection) {
					collection.find({$query: {'hero_list_id':id}, $orderby: {order:1}}).toArray(function(err, items) {
						if (item) {
							item.heroes = items;
							res.send(item);
						}
					});
				});
			});
		});
	});
};

exports.addHeroList = function(req, res) {
	mongo_connect(function(db) {
		var herolist = req.body;
		db.collection('herolist', function(err, collection) {
			collection.insert(herolist, {safe:true}, function(err, result) {
				if (err) {
					res.send({'error':'An error has occurred'});
				} else {
					console.log('Success: ' + JSON.stringify(result[0]));
					res.send(result[0]);
				}
			});
		});
	});
};

exports.updateHeroList = function(req, res) {
	mongo_connect(function(db) {
		var id = req.params.id;
		var herolist = req.body;
		var herolistcollection = db.collection('herolist');

		herolistcollection.update({'_id': new BSON.ObjectID(id)}, herolist, function(err) {
			res.send(herolist);
		});
	});
};

exports.deleteHeroList = function(req, res) {
	mongo_connect(function(db) {
		var id = req.params.id;

		db.collection('herolist', function(err, collection) {
			collection.remove({'_id':new BSON.ObjectID(id)}, {safe:true}, function(err, result) {
				if (err) {
					res.send({'error':'An error has occurred - ' + err});
				} else {
					console.log('' + result + ' document(s) deleted');
					res.send(req.body);
				}
			});
		});
	});
};