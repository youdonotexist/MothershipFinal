3.1.7 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@has_childrenT:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@children[o:Sass::Tree::ImportNode
;i;0;	[ :@imported_filename"shared:@options{ o:Sass::Tree::CommentNode:@value"ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;i;	[ :@silenti ;@:@lines[ :
@loud0o:Sass::Tree::VariableNode:
@name" default-transition-property:@guarded"!default;i;	[ :
@expro:Sass::Script::String	;"all;i;@:
@type:identifier;@o;;" default-transition-duration;"!default;i;	[ ;o:Sass::Script::Number:@denominator_units[ ;i;i:@numerator_units["s;@:@original"1s;@o;;" default-transition-function;"!default;i;	[ ;o:Sass::Script::Bool;F;i;@;@o;;"default-transition-delay;"!default;i;	[ ;o;;F;i;@;@o;;"#transitionable-prefixed-values;"!default;i;	[ ;o:Sass::Script::List	;[o;	;"transform;i;@;;o;	;"transform-origin;i;@;;;i:@separator:
comma;@;@o;;"}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i!;	[ ;i ;@;[ ;0o:Sass::Tree::MixinDefNode:
@args[[o:Sass::Script::Variable;"property-1:@underscored_name"property_1;{ o;#	;" default-transition-property;$" default_transition_property;i&;@=[o;#;"property-2;$"property_2;@=o;;F;i';@=[o;#;"property-3;$"property_3;@=o;;F;i(;@=[o;#;"property-4;$"property_4;@=o;;F;i);@=[o;#;"property-5;$"property_5;@=o;;F;i*;@=[o;#;"property-6;$"property_6;@=o;;F;i+;@=[o;#;"property-7;$"property_7;@=o;;F;i,;@=[o;#;"property-8;$"property_8;@=o;;F;i-;@=[o;#;"property-9;$"property_9;@=o;;F;i.;@=[o;#;"property-10;$"property_10;@=o;;F;i/;@=;"transition-property;T;i0;	[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"property-1:@underscored_name"property_1:
@linei1:@options{ ;"type-of;i1;@:@keywords{ ;i1;@:@operand2o:Sass::Script::String	:@value"string;i1;@:
@type:identifier0[o:Sass::Tree::VariableNode;"property-1:@guarded0;i1:@children[ :
@expro;	
;
[o;	;"property-1;"property_1;i1;@;"unquote;i1;@;{ ;@o;;"properties;0;i2;	[ ;o:Sass::Script::Funcall
;"[o;#	;"property-1;$"property_1;i2;@o;#	;"property-2;$"property_2;i2;@o;#	;"property-3;$"property_3;i2;@o;#	;"property-4;$"property_4;i2;@o;#	;"property-5;$"property_5;i2;@o;#	;"property-6;$"property_6;i2;@o;#	;"property-7;$"property_7;i2;@o;#	;"property-8;$"property_8;i2;@o;#	;"property-9;$"property_9;i2;@o;#	;"property-10;$"property_10;i2;@;"compact;i2;@:@keywords{ ;@u;%¼[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:@underscored_name"$experimental_support_for_webkit:
@linei3:@options{ 0[o:Sass::Tree::PropNode;[" -webkit-transition-property:@prop_syntax:new:@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;"-webkit;i3;	@	:
@type:identifiero; 	;"properties;"properties;i3;	@	;"prefixed-for-transition;i3;	@	:@keywords{ ;i3:@children[ ;	@	:
@tabsi u;%¸[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:@underscored_name"%experimental_support_for_mozilla:
@linei4:@options{ 0[o:Sass::Tree::PropNode;["-moz-transition-property:@prop_syntax:new:@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;"	-moz;i4;	@	:
@type:identifiero; 	;"properties;"properties;i4;	@	;"prefixed-for-transition;i4;	@	:@keywords{ ;i4:@children[ ;	@	:
@tabsi u;%°[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:@underscored_name"#experimental_support_for_opera:
@linei5:@options{ 0[o:Sass::Tree::PropNode;["-o-transition-property:@prop_syntax:new:@valueo:Sass::Script::Funcall
:
@args[o:Sass::Script::String	;"-o;i5;	@	:
@type:identifiero; 	;"properties;"properties;i5;	@	;"prefixed-for-transition;i5;	@	:@keywords{ ;i5:@children[ ;	@	:
@tabsi o:Sass::Tree::PropNode;["transition-property:@prop_syntax:new;o;#	;"properties;$"properties;i6;@;i6;	[ ;@:
@tabsi ;@o;;"¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i9;	[ ;i ;@;[ ;0o;!;"[[o;#;"duration-1;$"duration_1;{ o;#	;" default-transition-duration;$" default_transition_duration;i>;@¥[o;#;"duration-2;$"duration_2;@¥o;;F;i?;@¥[o;#;"duration-3;$"duration_3;@¥o;;F;i@;@¥[o;#;"duration-4;$"duration_4;@¥o;;F;iA;@¥[o;#;"duration-5;$"duration_5;@¥o;;F;iB;@¥[o;#;"duration-6;$"duration_6;@¥o;;F;iC;@¥[o;#;"duration-7;$"duration_7;@¥o;;F;iD;@¥[o;#;"duration-8;$"duration_8;@¥o;;F;iE;@¥[o;#;"duration-9;$"duration_9;@¥o;;F;iF;@¥[o;#;"duration-10;$"duration_10;@¥o;;F;iG;@¥;"transition-duration;T;iH;	[u;%Í[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"duration-1:@underscored_name"duration_1:
@lineiI:@options{ ;"type-of;iI;@:@keywords{ ;iI;@:@operand2o:Sass::Script::String	:@value"string;iI;@:
@type:identifier0[o:Sass::Tree::VariableNode;"duration-1:@guarded0;iI:@children[ :
@expro;	
;
[o;	;"duration-1;"duration_1;iI;@;"unquote;iI;@;{ ;@o;;"durations;0;iJ;	[ ;o;&
;"[o;#	;"duration-1;$"duration_1;iJ;@o;#	;"duration-2;$"duration_2;iJ;@o;#	;"duration-3;$"duration_3;iJ;@o;#	;"duration-4;$"duration_4;iJ;@o;#	;"duration-5;$"duration_5;iJ;@o;#	;"duration-6;$"duration_6;iJ;@o;#	;"duration-7;$"duration_7;iJ;@o;#	;"duration-8;$"duration_8;iJ;@o;#	;"duration-9;$"duration_9;iJ;@o;#	;"duration-10;$"duration_10;iJ;@;"compact;iJ;@;'{ ;@o:Sass::Tree::MixinNode;"[o;	;"transition-duration;iK;@;;o;#	;"durations;$"durations;iK;@o;	;"	-moz;iL;@;;o;	;"-webkit;iL;@;;o;	;"-o;iL;@;;o:!Sass::Script::UnaryOperation	:@operator:not:@operando;	;"-ms;iL;@;;;iL;@o;-	;.;/;0o;	;"-khtml;iL;@;;;iL;@o;	;"official;iL;@;;;"experimental;iM;	[ ;@;'{ ;@o;;"õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;iP;	[ ;i ;@;[ ;0o;!;"[[o;#;"function-1;$"function_1;{ o;#	;" default-transition-function;$" default_transition_function;iV;@ [o;#;"function-2;$"function_2;@ o;;F;iW;@ [o;#;"function-3;$"function_3;@ o;;F;iX;@ [o;#;"function-4;$"function_4;@ o;;F;iY;@ [o;#;"function-5;$"function_5;@ o;;F;iZ;@ [o;#;"function-6;$"function_6;@ o;;F;i[;@ [o;#;"function-7;$"function_7;@ o;;F;i\;@ [o;#;"function-8;$"function_8;@ o;;F;i];@ [o;#;"function-9;$"function_9;@ o;;F;i^;@ [o;#;"function-10;$"function_10;@ o;;F;i_;@ ;"transition-timing-function;T;i`;	[o;;"function-1;0;ia;	[ ;o;&
;"[o;#	;"function-1;$"function_1;ia;@;"unquote;ia;@;'{ ;@o;;"functions;0;ib;	[ ;o;&
;"[o;#	;"function-1;$"function_1;ib;@o;#	;"function-2;$"function_2;ib;@o;#	;"function-3;$"function_3;ib;@o;#	;"function-4;$"function_4;ib;@o;#	;"function-5;$"function_5;ib;@o;#	;"function-6;$"function_6;ib;@o;#	;"function-7;$"function_7;ib;@o;#	;"function-8;$"function_8;ib;@o;#	;"function-9;$"function_9;ib;@o;#	;"function-10;$"function_10;ib;@;"compact;ib;@;'{ ;@o;,;"[o;	;"transition-timing-function;ic;@;;o;#	;"functions;$"functions;ic;@o;	;"	-moz;id;@;;o;	;"-webkit;id;@;;o;	;"-o;id;@;;o;-	;.;/;0o;	;"-ms;id;@;;;id;@o;-	;.;/;0o;	;"-khtml;id;@;;;id;@o;	;"official;id;@;;;"experimental;ie;	[ ;@;'{ ;@o;;"¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;ih;	[ ;i ;@;[ ;0o;!;"[[o;#;"delay-1;$"delay_1;{ o;#	;"default-transition-delay;$"default_transition_delay;im;@¤[o;#;"delay-2;$"delay_2;@¤o;;F;in;@¤[o;#;"delay-3;$"delay_3;@¤o;;F;io;@¤[o;#;"delay-4;$"delay_4;@¤o;;F;ip;@¤[o;#;"delay-5;$"delay_5;@¤o;;F;iq;@¤[o;#;"delay-6;$"delay_6;@¤o;;F;ir;@¤[o;#;"delay-7;$"delay_7;@¤o;;F;is;@¤[o;#;"delay-8;$"delay_8;@¤o;;F;it;@¤[o;#;"delay-9;$"delay_9;@¤o;;F;iu;@¤[o;#;"delay-10;$"delay_10;@¤o;;F;iv;@¤;"transition-delay;T;iw;	[u;%¾[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"delay-1:@underscored_name"delay_1:
@lineix:@options{ ;"type-of;ix;@:@keywords{ ;ix;@:@operand2o:Sass::Script::String	:@value"string;ix;@:
@type:identifier0[o:Sass::Tree::VariableNode;"delay-1:@guarded0;ix:@children[ :
@expro;	
;
[o;	;"delay-1;"delay_1;ix;@;"unquote;ix;@;{ ;@o;;"delays;0;iy;	[ ;o;&
;"[o;#	;"delay-1;$"delay_1;iy;@o;#	;"delay-2;$"delay_2;iy;@o;#	;"delay-3;$"delay_3;iy;@o;#	;"delay-4;$"delay_4;iy;@o;#	;"delay-5;$"delay_5;iy;@o;#	;"delay-6;$"delay_6;iy;@o;#	;"delay-7;$"delay_7;iy;@o;#	;"delay-8;$"delay_8;iy;@o;#	;"delay-9;$"delay_9;iy;@o;#	;"delay-10;$"delay_10;iy;@;"compact;iy;@;'{ ;@o;,;"[o;	;"transition-delay;iz;@;;o;#	;"delays;$"delays;iz;@o;	;"	-moz;i{;@;;o;	;"-webkit;i{;@;;o;	;"-o;i{;@;;o;-	;.;/;0o;	;"-ms;i{;@;;;i{;@o;-	;.;/;0o;	;"-khtml;i{;@;;;i{;@o;	;"official;i{;@;;;"experimental;i|;	[ ;@;'{ ;@o;;"*/* Transition all-in-one shorthand */;i;	[ ;i ;@;[ ;0o;!;"[	[o;#;"property;$"property;{ o;#	;" default-transition-property;$" default_transition_property;i};@[o;#;"duration;$"duration;@o;#	;" default-transition-duration;$" default_transition_duration;i~;@[o;#;"function;$"function;@o;#	;" default-transition-function;$" default_transition_function;i;@[o;#;"
delay;$"
delay;@o;#	;"default-transition-delay;$"default_transition_delay;i;@;"single-transition;T;i;	[o;,;"[o;&
;"[o;	;[	o;#	;"property;$"property;i;@o;#	;"duration;$"duration;i;@o;#	;"function;$"function;i;@o;#	;"
delay;$"
delay;i;@;i;:
space;@;"compact;i;@;'{ ;"transition;i;	[ ;@;'{ ;@o;!;"[[o;#;"transition-1;$"transition_1;{ o;	;"default;i;@W;;[o;#;"transition-2;$"transition_2;@Wo;;F;i;@W[o;#;"transition-3;$"transition_3;@Wo;;F;i;@W[o;#;"transition-4;$"transition_4;@Wo;;F;i;@W[o;#;"transition-5;$"transition_5;@Wo;;F;i;@W[o;#;"transition-6;$"transition_6;@Wo;;F;i;@W[o;#;"transition-7;$"transition_7;@Wo;;F;i;@W[o;#;"transition-8;$"transition_8;@Wo;;F;i;@W[o;#;"transition-9;$"transition_9;@Wo;;F;i;@W[o;#;"transition-10;$"transition_10;@Wo;;F;i;@W;"transition;T;i;	[u;%î[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"transition-1:@underscored_name"transition_1:
@linei:@options{ ;i;@
:@operand2o:Sass::Script::String	:@value"default;i;@
:
@type:identifier0[o:Sass::Tree::VariableNode;
"transition-1:@guarded0;i:@children[ :
@expro:Sass::Script::Funcall
:
@args[o:Sass::Script::List	;[	o;		;
" default-transition-property;" default_transition_property;i;@
o;		;
" default-transition-duration;" default_transition_duration;i;@
o;		;
" default-transition-function;" default_transition_function;i;@
o;		;
"default-transition-delay;"default_transition_delay;i;@
;i:@separator:
space;@
;
"compact;i;@
:@keywords{ ;@
o;;"transitions;0;i;	[ ;o;;F;i;@;@u;%g[o:Sass::Script::Operation
:@operator:and:@operand1o; 
;:eq;o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"transition-1:@underscored_name"transition_1:
@linei:@options{ ;"type-of;i;@:@keywords{ ;i;@:@operand2o:Sass::Script::String	:@value"	list;i;@:
@type:identifier;i;@;o; 
;;	;o;

;[o;

;[o;	;"transition-1;"transition_1;i;@o:Sass::Script::Number:@denominator_units[ ;i;i:@numerator_units[ ;@:@original"1;"nth;i;@;{ ;"type-of;i;@;{ ;i;@;o;	;"	list;i;@;;u:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@name"transitions:@guarded0:
@linei:@children[ :
@expro:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	;"transition-1:@underscored_name"transition_1;i:@options{ o;	;"transition-2;"transition_2;i;@o;	;"transition-3;"transition_3;i;@o;	;"transition-4;"transition_4;i;@o;	;"transition-5;"transition_5;i;@o;	;"transition-6;"transition_6;i;@o;	;"transition-7;"transition_7;i;@o;	;"transition-8;"transition_8;i;@o;	;"transition-9;"transition_9;i;@o;	;"transition-10;"transition_10;i;@;"compact;i;@:@keywords{ ;@[o:Sass::Tree::VariableNode;"transitions:@guarded0;i:@children[ :
@expro;

;[o;	;"transition-1;"transition_1;i;@o;

;[o;	;"transition-2;"transition_2;i;@o;	;"transition-3;"transition_3;i;@o;	;"transition-4;"transition_4;i;@o;	;"transition-5;"transition_5;i;@o;	;"transition-6;"transition_6;i;@o;	;"transition-7;"transition_7;i;@o;	;"transition-8;"transition_8;i;@o;	;"transition-9;"transition_9;i;@o;	;"transition-10;"transition_10;i;@;"compact;i;@;{ o;	;"
comma;i;@;;;"	join;i;@;{ ;@o;;"delays;0;i;	[ ;o;&
;"[ ;"comma-list;i;@;'{ ;@o;;"has-delays;0;i;	[ ;o;;F;i;@;@o;;"webkit-value;0;i;	[ ;o;&
;"[ ;"comma-list;i;@;'{ ;@o;;"moz-value;0;i;	[ ;o;&
;"[ ;"comma-list;i;@;'{ ;@o;;"o-value;0;i;	[ ;o;&
;"[ ;"comma-list;i;@;'{ ;@o;;"/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;	[ ;i ;@;[ ;0o:Sass::Tree::EachNode:	@var"transition;T:
@listo;#	;"transitions;$"transitions;i¢;@;i¢;	[o;;"}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i£;	[ ;i ;@;[ ;0o;;"property;0;i¥;	[ ;o;&
;"[o;#	;"transition;$"transition;i¥;@o;;[ ;i;i¥;[ ;@;"1;"nth;i¥;@;'{ ;@o;;"duration;0;i¦;	[ ;o;;F;i¦;@;@o;;"timing-function;0;i§;	[ ;o;;F;i§;@;@o;;"
delay;0;i¨;	[ ;o;;F;i¨;@;@u;%
[o:Sass::Script::Operation
:@operator:gt:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"transition:@underscored_name"transition:
@linei©:@options{ ;"length;i©;@:@keywords{ ;i©;@:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;i©:@numerator_units[ ;@:@original"10[o:Sass::Tree::VariableNode;"duration:@guarded0;i©:@children[ :
@expro;	
;
[o;	;"transition;"transition;i©;@o;;@;i;i©;[ ;@;"2;"nth;i©;@;{ ;@u;%[o:Sass::Script::Operation
:@operator:gt:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"transition:@underscored_name"transition:
@lineiª:@options{ ;"length;iª;@:@keywords{ ;iª;@:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;iª:@numerator_units[ ;@:@original"20[o:Sass::Tree::VariableNode;"timing-function:@guarded0;iª:@children[ :
@expro;	
;
[o;	;"transition;"transition;iª;@o;;@;i;iª;[ ;@;"3;"nth;iª;@;{ ;@u;%M[o:Sass::Script::Operation
:@operator:gt:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"transition:@underscored_name"transition:
@linei«:@options{ ;"length;i«;@:@keywords{ ;i«;@:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;i«:@numerator_units[ ;@:@original"30[o:Sass::Tree::VariableNode;"
delay:@guarded0;i«:@children[ :
@expro;	
;
[o;	;"transition;"transition;i«;@o;;@;i	;i«;[ ;@;"4;"nth;i«;@;{ ;@o;;"has-delays;0;i«;[ ;o:Sass::Script::Bool;T;i«;@;@o;;";/* If a delay is provided without a timing function */;i­;	[ ;i ;@;[ ;0u;%^[o:Sass::Script::Operation
:@operator:and:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"timing-function:@underscored_name"timing_function:
@linei®:@options{ ;"is-time;i®;@:@keywords{ ;i®;@:@operand2o:!Sass::Script::UnaryOperation	;:not:@operando;	;"
delay;"
delay;i®;@;i®;@0[o:Sass::Tree::VariableNode;"
delay:@guarded0;i®:@children[ :
@expro;	;"timing-function;"timing_function;i®;@;@o;;"timing-function;0;i®;[ ;o:Sass::Script::Bool:@valueF;i®;@;@o;;"has-delays;0;i®;[ ;o;;T;i®;@;@o;;"9/* Keep a list of delays in case one is specified */;i°;	[ ;i ;@;[ ;0o;;"delays;0;i±;	[ ;o;&
;"[o;#	;"delays;$"delays;i±;@o;&
;"[o;#	;"
delay;$"
delay;i±;@o;#	;"
delay;$"
delay;i±;@o;;[ ;i ;i±;["s;@;"0s;"if;i±;@;'{ ;"append;i±;@;'{ ;@o;;"webkit-value;0;i³;	[ ;o;&
;"[o;#	;"webkit-value;$"webkit_value;i³;@o;&
;"[o;	;[o;&
;"[o;	;"-webkit;i³;@;;o;#	;"property;$"property;i³;@;"prefixed-for-transition;i³;@;'{ o;#	;"duration;$"duration;i³;@o;#	;"timing-function;$"timing_function;i³;@;i³;;1;@;"compact;i³;@;'{ ;"append;i³;@;'{ ;@o;;"moz-value;0;i´;	[ ;o;&
;"[o;#	;"moz-value;$"moz_value;i´;@o;&
;"[o;	;[	o;&
;"[o;	;"	-moz;i´;@;;o;#	;"property;$"property;i´;@;"prefixed-for-transition;i´;@;'{ o;#	;"duration;$"duration;i´;@o;#	;"timing-function;$"timing_function;i´;@o;#	;"
delay;$"
delay;i´;@;i´;;1;@;"compact;i´;@;'{ ;"append;i´;@;'{ ;@o;;"o-value;0;iµ;	[ ;o;&
;"[o;#	;"o-value;$"o_value;iµ;@o;&
;"[o;	;[	o;&
;"[o;	;"-o;iµ;@;;o;#	;"property;$"property;iµ;@;"prefixed-for-transition;iµ;@;'{ o;#	;"duration;$"duration;iµ;@o;#	;"timing-function;$"timing_function;iµ;@o;#	;"
delay;$"
delay;iµ;@;iµ;;1;@;"compact;iµ;@;'{ ;"append;iµ;@;'{ ;@;@u;%é[o:Sass::Script::Variable	:
@name"$experimental-support-for-webkit:@underscored_name"$experimental_support_for_webkit:
@linei¸:@options{ 0[o:Sass::Tree::PropNode;["-webkit-transition:@prop_syntax:new:@valueo; 	;"webkit-value;"webkit_value;i¸;	@	;i¸:@children[ ;	@	:
@tabsi o:Sass::Tree::CommentNode;"j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;i¹;[ :@silenti ;	@	:@lines[ :
@loud0u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@name"has-delays:@underscored_name"has_delays:
@lineiº:@options{ 0[o:Sass::Tree::PropNode;["-webkit-transition-delay:@prop_syntax:new:@valueo; 	;"delays;"delays;iº;	@	;iº:@children[ ;	@	:
@tabsi u;%#[o:Sass::Script::Variable	:
@name"%experimental-support-for-mozilla:@underscored_name"%experimental_support_for_mozilla:
@linei»:@options{ 0[o:Sass::Tree::PropNode;["-moz-transition:@prop_syntax:new:@valueo; 	;"moz-value;"moz_value;i»;	@	;i»:@children[ ;	@	:
@tabsi u;%[o:Sass::Script::Variable	:
@name"#experimental-support-for-opera:@underscored_name"#experimental_support_for_opera:
@linei¼:@options{ 0[o:Sass::Tree::PropNode;["-o-transition:@prop_syntax:new:@valueo; 	;"o-value;"o_value;i¼;	@	;i¼:@children[ ;	@	:
@tabsi o;(;["transition;);*;o;#	;"transitions;$"transitions;i½;@;i½;	[ ;@;+i ;@o;;"Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;iÀ;	[ ;i ;@;[ ;0o:Sass::Tree::FunctionNode;"[[o;#;"	list;$"	list;@o;	;[ ;iÁ;;1;@;"comma-list;T;iÁ;	[o:Sass::Tree::ReturnNode	;iÂ;	[ ;o;&
;"[o;	;[ ;iÂ;;1;@o;#	;"	list;$"	list;iÂ;@o;	;"
comma;iÂ;@;;;"	join;iÂ;@;'{ ;@;@o;;"i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;iÅ;	[ ;i ;@;[ ;0o;5;"[[o;#;"prefix;$"prefix;@0[o;#;"property;$"property;@0;"prefixed-for-transition;T;iÆ;	[u;%[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"property:@underscored_name"property:
@lineiÇ:@options{ ;"type-of;iÇ;@:@keywords{ ;iÇ;@:@operand2o:Sass::Script::String	:@value"	list;iÇ;@:
@type:identifieru:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"#transitionable-prefixed-values:@underscored_name"#transitionable_prefixed_values:
@lineiÎ:@options{ o;	;"property;	"property;
iÎ;@;"
index;
iÎ;@:@keywords{ u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@lineiÑ:@children[ :
@expro:Sass::Script::Variable	:
@name"property:@underscored_name"property;iÑ:@options{ ;@[o:Sass::Tree::ReturnNode	;
iÏ:@children[ :
@expro: Sass::Script::Interpolation:@aftero;;0:@originally_textF;
iÏ:	@mido;	;"property;	"property;
iÏ;@:@whitespace_after0;@:@beforeo;;0;:originally_text;
iÏ;o:Sass::Script::String	:@value"-;
iÏ;@:
@type:identifier;F;@;0:@whitespace_before0;0;F;
iÏ;o;	;"prefix;	"prefix;
iÏ;@;0;@;0;i;@[o:Sass::Tree::VariableNode;"new-list:@guarded0;iÈ:@children[ :
@expro;	
;
[ ;"comma-list;iÈ;@;{ ;@o:Sass::Tree::EachNode:	@var"v:@has_childrenT:
@listo;	;"property;"property;iÉ;@;iÉ;[o;;"new-list;0;iÊ;[ ;o;	
;
[o;	;"new-list;"new_list;iÊ;@o;	
;
[o;	;"prefix;"prefix;iÊ;@o;	;"v;"v;iÊ;@;"prefixed-for-transition;iÊ;@;{ ;"append;iÊ;@;{ ;@;@o:Sass::Tree::ReturnNode	;iÌ;[ ;o;	;"new-list;"new_list;iÌ;@;@;@o;;"7/* Checks if the value given is a unit of time. */;iÖ;	[ ;i ;@;[ ;0o;5;"[[o;#;"
value;$"
value;@0;"is-time;T;i×;	[u;%ù[o:Sass::Script::Operation
:@operator:eq:@operand1o:Sass::Script::Funcall
:
@args[o:Sass::Script::Variable	:
@name"
value:@underscored_name"
value:
@lineiØ:@options{ ;"type-of;iØ;@:@keywords{ ;iØ;@:@operand2o:Sass::Script::String	:@value"number;iØ;@:
@type:identifieru:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@lineiÛ:@children[ :
@expro:Sass::Script::Bool:@valueF;iÛ:@options{ ;@
[o:Sass::Tree::ReturnNode	;iÙ:@children[ :
@expro:!Sass::Script::UnaryOperation	;:not:@operando;	;;;o;	
;
[o:Sass::Script::List	;[o;	;"s;iÙ;@;;o;	;"ms;iÙ;@;;;iÙ:@separator:
space;@o;	
;
[o;	;"
value;"
value;iÙ;@;"	unit;iÙ;@;{ ;"
index;iÙ;@;{ ;iÙ;@;iÙ;@;@;@;@