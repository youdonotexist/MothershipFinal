using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using System;

public class SpriteSwitcher : MonoBehaviour {
	
	public exSpriteAnimClip[] nesAnimations;
	public string nesSpriteName;
	public Vector2 nesSpriteOffset;

	public exSpriteAnimClip[] msAnimations;
	public string msSpriteName;
	public Vector2 msSpriteOffset;
	
	public exSpriteAnimClip[] snesAnimations;
	public string snesSpriteName;
	public Vector2 snesSpriteOffset;
	
	public exSpriteAnimClip[] latestAnimations;
	public string latestSpriteName;
	public Vector2 latestSpriteOffset;
	
	public int defaultAnimationIndex = -1;

	exSpriteAnimation _animation;
	exSprite _sprite;

	void Awake() {
		_sprite = GetComponent<exSprite>();
		_animation = GetComponent<exSpriteAnimation>();
		Messenger.AddListener("on_sprite_quality_change", new Callback<string>(OnSpriteQualityChange));
	}
	
	void OnEnable() {
		if (MissionDetails.Instance.encounterType == "BASIC") {
			OnSpriteQualityChange("nes");
		}
		else if (MissionDetails.Instance.encounterType == "JUGGERNAUT") {
			OnSpriteQualityChange("ms");
		}
		else { // (MissionDetails.Instance.encounterType == "MIXED") {
			OnSpriteQualityChange("latest");
		}
	}

	void OnSpriteQualityChange(string qualityType) {
		if (ResourceManager.Instance == null) return; //Fuck this shit

		exAtlas atlas = null;
		string spriteName = "";
		Vector2 spriteOffset = Vector2.zero;
		exSpriteAnimClip[] spriteAnimations = null;

		if ("nes".Equals(qualityType)) {
			atlas = ResourceManager.Instance.nesAtlas;
			spriteName = nesSpriteName;
			spriteOffset = nesSpriteOffset;
			spriteAnimations = nesAnimations;
		}
		else if ("ms".Equals(qualityType)) {
			atlas = ResourceManager.Instance.msAtlas;
			spriteName = msSpriteName;
			spriteOffset = msSpriteOffset;
			spriteAnimations = msAnimations;
		}
		else if ("latest".Equals(qualityType)) {
			atlas = ResourceManager.Instance.latestAtlas;
			spriteName = latestSpriteName;
			spriteOffset = latestSpriteOffset;
			spriteAnimations = latestAnimations;
		}

		int spriteIndex = atlas.GetIndexByName(spriteName);
		if (spriteIndex >= 0) {
			_sprite.SetSprite(atlas, spriteIndex, true);
		}
		_sprite.offset = spriteOffset;
		if (_animation != null) {
			AddAnimations(spriteAnimations);
			if (defaultAnimationIndex >= 0) {
				_animation.defaultAnimation = spriteAnimations[defaultAnimationIndex];
				_animation.PlayDefault();
			}
			_animation.enabled = true;
		}
	}

	void OnDestroy() {
		//Messenger.RemoveListener("on_sprite_quality_change", new Callback<string>(OnSpriteQualityChange));
	}
	
	void AddAnimations(exSpriteAnimClip[] anims) {
		_animation.animations.Clear();
		for (int i = 0; i < anims.Length; i++) {
			_animation.AddAnimation(anims[i]);	
		}
	}
}
