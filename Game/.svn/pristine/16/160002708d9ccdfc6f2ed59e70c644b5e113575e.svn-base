using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using MiniJSON;
public class MainMenuEncounterSelect : MonoBehaviour
{
	UIPopupList _list;
	string[] names;
	IList encounters;
	
	MainMenu _mainMenu;
	GameObject loadingIcon;
	
	public UIGrid _encounterGrid;
	public GameObject encounterPrefab;
	
	void Start ()
	{
		_list = GetComponent<UIPopupList>();
		_mainMenu = GameObject.Find("UI Root").GetComponent<MainMenu>();
		
		loadingIcon = GameObject.Find("LoadingIcon");
	}
	
	public void DownloadEncounters(bool story) {
		StartCoroutine(Download (story));
	}
	
	void Update() {
		if (loadingIcon != null && loadingIcon.activeSelf) {
			Vector3 rot = loadingIcon.transform.eulerAngles;
			rot.z += (200.0f * Time.deltaTime);
			loadingIcon.transform.eulerAngles = rot;
		}
	}
	
	IEnumerator Download(bool story) {
		StartLoading();
		HTTP.Request encounterReq = new HTTP.Request( "get", "http://mothership.mike-daly.com/encounter" + (story ? "?story=true" : "") );
		encounterReq.responseTime = 6000;
    	encounterReq.Send();

	    while( !encounterReq.isDone ) { yield return null; }
		
		//var thing = new WWW("http://mothership.mike-daly.com/encounter");
		//yield return thing;
		
		Debug.Log ("HTTP Status Code: " + encounterReq.response.status);
		encounters = (IList) Json.Deserialize(encounterReq.response.Text);  
		
		//Destroy any old items
		int childCount = _encounterGrid.transform.childCount;
		for (int i = 0; i < childCount; i++) {
			Transform child = _encounterGrid.transform.GetChild(0);
			child.parent = null;
			Destroy(child.gameObject);	
		}
		
		//Create new items
		Random.seed = 1;
		for (int i = 0; i < encounters.Count; i++) {
			IDictionary dict = (IDictionary) encounters[i];
			string name = (string) dict["name"];
			string type = (string) dict["hero_type_id"];
			string backstory = (string) dict["backstory"];
			string encid = (string) dict["_id"];
			GameObject encounter = (GameObject) GameObject.Instantiate(encounterPrefab, Vector3.zero, encounterPrefab.transform.rotation);
			EncounterItem item = encounter.GetComponent<EncounterItem>();
			
			encounter.transform.parent = _encounterGrid.transform;
			item.transform.localPosition = Vector3.zero;
			
			item._title.text = name;
			item._shipSprite.spriteName = TypeToSprite(type);
			item._details.text = backstory;
			item.LoadHighScore(encid);
		}
		_encounterGrid.Reposition();
		
		UICenterOnChild center = gameObject.GetComponentInChildren<UICenterOnChild>();
		center.Recenter();
		FinishLoading();
	}
	
	string TypeToSprite(string type) {
		if (type == "JUGGERNAUT"){
			return "jugg3-5-1-f1";
		}
		else if (type == "BASIC") {
			return "Hero6-5-1-f1";
		}
		else if (type == "SCIENTIST") {
			return "mayfl2-5-1-f1";
		}
		
		return "";
	}
	
	void onChangeValue(string test) {
		IDictionary enc = GetEncounterByName(test);
		if (enc != null) {
			GameObject go = GameObject.Find("MissionDetails");	
			MissionDetails md = go.GetComponent<MissionDetails>();
			md.SetEncounterId((string)enc["_id"]);
		}
		
	}
	
	IDictionary GetEncounterByName(string name) {
		foreach (IDictionary enc in encounters) {
			string n = (string) enc["name"];
			if (n == name) {
				return enc;	
			}
		}
		
		return null;
	}
	
	public void Play() {
		UICenterOnChild center = gameObject.GetComponentInChildren<UICenterOnChild>();
		GameObject centeredObject = center.centeredObject;
		EncounterItem encounterItem = centeredObject.GetComponent<EncounterItem>();
		
		IDictionary enc = GetEncounterByName(encounterItem._title.text);
		if (enc != null) {
			GameObject go = GameObject.Find("MissionDetails");	
			MissionDetails md = go.GetComponent<MissionDetails>();
			md.SetEncounterId((string)enc["_id"]);
			
			Application.LoadLevel("Scene01-4_3");
		}
	}
	
	public void StartLoading() {
		if (loadingIcon != null) {
			loadingIcon.SetActive(true);
		}
	}
	
	public void FinishLoading() {
		if (loadingIcon != null) {
			loadingIcon.SetActive(false);
		}
	}
	
}

