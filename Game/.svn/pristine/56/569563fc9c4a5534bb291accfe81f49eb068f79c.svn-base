using UnityEngine;
using System.Collections;

public class AngledTripleShot : LaserProjectile
{
	public GameObject _muzzlePoint;
	
	public override bool Fire() {
		bool blocked = Physics.Raycast(transform.position, transform.forward, Mathf.Infinity, LayerMaskHelper.OnlyIncluding(LayerMask.NameToLayer("HeroShield")));
		if (_projectilePrefab != null && blocked == false) {
			GameObject instance = (GameObject) Instantiate(_projectilePrefab);
			instance.transform.forward = transform.forward;
			instance.rigidbody.constantForce.force = transform.forward * 0.0001f;
			instance.transform.parent = transform;
			instance.transform.position = _muzzlePoint.transform.position;
			
			float theta = Mathf.Deg2Rad * 45;
			Vector3 forward = transform.forward;

			float cs = Mathf.Cos(theta);
			float sn = Mathf.Sin(theta);
			
			float px = forward.x * cs - forward.z * sn; 
			float py = forward.x * sn + forward.z * cs;
			
			instance = (GameObject) Instantiate(_projectilePrefab);
			instance.transform.forward = new Vector3(px, py, 0.0f);
			instance.rigidbody.constantForce.force = new Vector3(px, py, 0.0f) * 0.0001f;
			instance.transform.parent = transform;
			instance.transform.position = _muzzlePoint.transform.position;
			
			theta = Mathf.Deg2Rad * -45;
			forward = transform.forward;

			cs = Mathf.Cos(theta);
			sn = Mathf.Sin(theta);
			
			px = forward.x * cs - forward.z * sn; 
			py = forward.x * sn + forward.z * cs;
			
			instance = (GameObject) Instantiate(_projectilePrefab);
			instance.transform.forward = new Vector3(px, py, 0.0f);
			instance.rigidbody.constantForce.force = new Vector3(px, py, 0.0f) * 0.0001f;
			instance.transform.parent = transform;
			instance.transform.position = _muzzlePoint.transform.position;
			
			
			return true;
		}
		
		return false;
	}
}

