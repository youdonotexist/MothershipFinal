using UnityEngine;
using System.Collections;

public class DirectivePack : MonoBehaviour
{
	protected HeroAIManager _aiManager;
	protected HeroVehicle _vehicle;
	protected GameObject _mothership;
	
	void Awake() {
		_aiManager = GameObject.Find("_MinesAndShields").GetComponent<HeroAIManager>();	
		_mothership = GameObject.Find("Mothership");
	}
	
	public void SetHero(HeroVehicle veh) { _vehicle = veh; }
	public virtual HeroAIManager.DirectiveState handleDirective(AIDirective directive) { return HeroAIManager.DirectiveState.UNHANDLED;}
	
	protected IEnumerator MoveToLaneProper(SpatialNode node, float time) {
		if (_vehicle != null) {
			Vector3 startPosition = _vehicle.transform.position;
		
			float elapsedMove = 0.0f;
			while (elapsedMove < time) {
				if (_vehicle != null) {
					_vehicle.rigidbody.MovePosition(Vector3.Lerp(startPosition, node.transform.position, elapsedMove/time));
				}
				elapsedMove += Time.deltaTime;
				yield return null;
			}
		
			_vehicle._currentNode = node;
		
			if (_vehicle != null) {
				_vehicle.rigidbody.MovePosition(node.transform.position);
			}
		}
	}
	
	public virtual void OnHeroReady() {}
	public virtual void OnHeroWin() {}
}

